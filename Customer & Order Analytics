#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.
#1. How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE orderid <> ''
AND orderid <> 'Order ID'
 Answer: 9681
 
 
#2. How many of those orders were for an iPhone?
SELECT COUNT(Product)
FROM BIT_DB.JanSales
WHERE product = 'iPhone'
   Answer: 379
   
   
#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT BIT_DB.customers.acctnum,BIT_DB.customers.order_ID, BIT_DB.FebSales.orderID
FROM BIT_DB.customers
INNER join BIT_DB.Febsales
on customers.order_id = Febsales.orderID
WHERE order_id <> ''
AND order_id <> 'Order ID';
 
 
#4. Which product was the cheapest one sold in January, and what was the price?
SELECT product, price
FROM BIT_DB.JanSales
WHERE price <> ''
AND price <> 'Price Each'
ORDER BY price asc;
Product: AAA Batteries (4-pack) Price: $2.99
 
 
#5. What is the total revenue for each product sold in January?
SELECT sum(quantity)*price as revenue, product
FROM BIT_DB.JanSales
GROUP BY product


#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT location, product, quantity, sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101';
 Answer: 548 Lincoln St, Seattle, WA 98101	 | AA Batteries (4-pack)	 | 2 | 	7.68
 
 
#7. In February, how many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND order_id <> ''
AND order_id <> 'Order ID'
 Answer: 278	     13.82794964028773
 
 # 8 List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product;

